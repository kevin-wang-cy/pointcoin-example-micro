buildscript {
    ext {
        springBootVersion = '1.5.3.RELEASE'
        gradleGitVersion = '1.4.17'
    }

    repositories {
        maven {
            url "${nexusPublicUrl}"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:${gradleGitVersion}")
    }
}

description = 'Crypto Pointcoin Cloud Example Micro'

allprojects {
    group = 'com.upbchain.pointcoin'
    version = project.properties.containsKey("releaseVersion") ? "${releaseVersion}" : "1.0-SNAPSHOT"

    apply plugin: 'idea'

    repositories {
        maven {
            url "${nexusPublicUrl}"
        }
    }

    task wrapper(type: Wrapper) {
        gradleVersion = '3.5'
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: "com.gorylenko.gradle-git-properties"

    apply plugin: 'idea'
    apply plugin: 'eclipse'

    ext {
        archivesBaseName = "${rootProject.name}-${project.name}"
        nexusRepoUrl = project.properties.containsKey("releaseVersion") ? "${nexusReleaseUrl}" : "${nexusSnapshotUrl}"

        swaggerCoreVersion = '1.5.13'
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    jar {
        baseName "${project.archivesBaseName}"
    }


    bootRun {
        addResources = true

        if ( project.hasProperty('jvmArgs') ) {
            jvmArgs project.jvmArgs.split('\\s+')
        }
    }

    repositories {
        maven {
            url "${nexusPublicUrl}"
        }
    }

    dependencies {
        compile('org.springframework.boot:spring-boot-starter-web') {
            exclude module: 'spring-boot-starter-tomcat'
            exclude group: 'org.apache.tomcat.embed'
        }
        compile('org.springframework.boot:spring-boot-starter-actuator')
        compile('org.springframework.boot:spring-boot-starter-data-jpa')

        compile('org.springframework.boot:spring-boot-starter-jersey') {
            exclude module: "spring-boot-starter-tomcat"
        }
        compile("org.springframework.boot:spring-boot-starter-jetty")

        compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
        compile("com.fasterxml.jackson.datatype:jackson-datatype-jdk8")

        compile("io.swagger:swagger-jersey2-jaxrs:${swaggerCoreVersion}")

        runtime('com.h2database:h2')
        runtime('org.springframework.boot:spring-boot-devtools')

        testCompile('org.springframework.boot:spring-boot-starter-test')
    }

    eclipse {
        project {
            name = "${project.name}"
        }
    }

    apply plugin: 'maven-publish'
    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId "${project.group}"
                artifactId "${archivesBaseName}"
                from components.java
            }
        }
        repositories {
            maven {
                credentials {
                    username "${nexusUsername}"
                    password "${nexusPassword}"
                }
                url "${nexusRepoUrl}"
            }
        }
    }

    publish {
        dependsOn assemble
    }
}
